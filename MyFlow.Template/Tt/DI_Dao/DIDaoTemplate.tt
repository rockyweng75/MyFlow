<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.DependencyInjection;
using MyFlow.Data.Connection;
using MyFlow.Data.DAOs;

namespace MyFlow.Data
{
	public static class DIServiceExtensions
	{
	    public static void AddDbContext(this IServiceCollection services, string connectionString) 
        {
            services.AddDbContext<TestDbContext>(options => {
                options.UseSqlServer(connectionString);
            });
        }

		public static void AddDAOs(this IServiceCollection services)
		{
			<# foreach(var dao in Daos){ #>
			services.AddScoped<I<#= dao #>, <#= dao #>>(injectDbContext<<#= dao #>>);
			<# } #>
		}

		private static TDao injectDbContext<TDao>(IServiceProvider serviceProvider) where TDao : class
		{
			var type = typeof(TDao);
			var dbContext = serviceProvider.GetService<TestDbContext>();
			TDao resultClass = (TDao)Activator.CreateInstance(type, dbContext);
			return resultClass;
		}
	}
}